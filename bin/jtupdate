#!/bin/bash
TARGET="mist mister sidi"
EXTRA="-d JTFRAME_RELEASE -g"
NETWORK=
DRYRUN=
CORES=".*"

while [ $# -gt 0 ]; do
    case "$1" in
        -mister|-mist|-sidi)
            TARGET=${1:1}
            ;;
        -target)
            shift
            TARGET="$1"
            ;;
        -all | -a)
			TARGET="mist mister sidi";;
        -test)
            EXTRA="-d NOSOUND -d MISTER_NOHDMI";;
        -dry|--dry-run)
            DRYRUN=--dry-run;;
        -cores)
            shift
            for i in $1; do
                if [ "$CORES" = ".*" ]; then
                    CORES="$i"
                else
                    CORES="$CORES\|$i"
                fi
            done
            ;;
        -network)
            shift
            if [ ! -e "$1" ]; then
                echo "Specify the name of the hosts file to use after -network"
                exit 1
            fi
            NETWORK="--sshloginfile $1"
            ;;
        -h | -help | --help)
            cat <<EOF
Updates all JT cores. Usage:
    jtupdate    update MiST target by default

    -mist   updates MiST target (uses all CPU cores, paralel compilation)
    -mister updates MiSTer target (one JT core at a time)
    -all    updates both MiST and MiSTer
    -cores  list of cores to update as \"gng 1943\"
    -sidi   compile for SiDi. Cannot update for SiDi and MiST at the same time
    -test   test build. Disables sound and HDMI. Does not define JTFRAME_RELEASE.
    :       options for jtcore script can be added after a colon
EOF
        exit 0;
        ;;
        :)
            # the remaining argument will be passed directly to the compilation
            shift
            EXTRA="$EXTRA $*"
            break;;
        *)  echo "ERROR: jtupdate does not know option $1";
            exit 1;;
    esac
    shift
done

(
    for i in $TARGET; do 
        if [ -e $i.cores ]; then cat $i.cores; fi; 
    done 
) | grep "$CORES" | 
parallel --no-run-if-empty --colsep " "  --shuf  --workdir $JTROOT \
    $DRYRUN $NETWORK \
    --delay 0.25 $JTFRAME/bin/jtcore {} $EXTRA | tee $JTROOT/log/update.log    

